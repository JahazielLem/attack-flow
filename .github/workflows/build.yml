name: Build

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:

permissions:
  contents: read
  id-token: write
  pages: write
  pull-requests: write

jobs:
  test_python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org/ | python -
    - name: Add Poetry to PATH
      run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Install Python dependencies
      run: poetry install
    - name: Check code formatting
      run: poetry run black --check src/attack_flow/
    - name: Run unit tests
      run: poetry run make test-ci
    - name: Upload coverage to CodeCov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_SECRET }}
        files: coverage.xml
        verbose: true

  test_attack_flow_builder:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install dependencies
      working-directory: ./src/attack_flow_builder/
      run: npm ci
    # Temporarily disable tests and linting
    # - name: Lint
    #   working-directory: ./src/attack_flow_builder/
    #   run: npm run lint
    # - name: Run unit tests
    #   working-directory: ./src/attack_flow_builder/
    #   run: npm run test:unit

  attack_flow_builder:
    needs: ["test_attack_flow_builder"]
    runs-on: ubuntu-latest
    env:
      AFB_BASE_URL: "${{ startsWith(github.ref, 'refs/tags/v') && '/attack-flow/ui/' || format('{0}/ui/', github.head_ref || github.ref_name) }}"
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v3
      with:
        node-version: '20'
    - name: Install dependencies
      working-directory: ./src/attack_flow_builder/
      run: npm ci
    - run: echo "BRANCH_NAME=$BRANCH_NAME, AFB_BASE_URL=$AFB_BASE_URL"
    - name: Build
      working-directory: ./src/attack_flow_builder/
      # Temporarily disable type checking
      # run: npm run build
      run: npm run build-only
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: attack-flow-builder
        path: src/attack_flow_builder/dist/

  comment_flow_links:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PR_NUMBER: ${{ github.event.number }}
      with:
          script: |
            const { PR_NUMBER, GITHUB_SHA } = process.env;
            const builderUrl = "https://center-for-threat-informed-defense.github.io/attack-flow/ui/?src=";
            const baseRawUrl = "https://raw.githubusercontent.com/center-for-threat-informed-defense/attack-flow"
            const response = await github.rest.pulls.listFiles({
              "owner": "center-for-threat-informed-defense",
              "repo": "attack-flow",
              "pull_number": PR_NUMBER,
              "per_page": 50,
              "page": 1,
            });
            const bullets = [];
            for (const file of response.data) {
              if (file.filename.startsWith("corpus/")) {
                const flowName = file.filename.split("/").pop();
                const flowArg = `${baseRawUrl}/${GITHUB_SHA}/corpus/${flowName}`;
                console.log(flowArg)
                const flowUrl = builderUrl + encodeURIComponent(flowArg);
                bullets.push(`* [${flowName}](${flowUrl})`);
              }
            }
            if (bullets.length > 0) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "Open this PR's flows in Attack Flow Builder:\n\n" + bullets.join("\n") + "\n",
              })
            }

  render_site:
    needs: ["test_python", "attack_flow_builder"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Update APT
      run: sudo apt update
    - name: Install APT dependencies
      run: sudo apt install graphviz
    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org/ | python -
    - name: Add Poetry to PATH
      run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Install Python dependencies
      run: poetry install
    - name: Install Node dependencies
      working-directory: ./src/attack_flow_builder/
      run: npm ci
    - name: Create client directory
      run: mkdir docs/extra/ui
    - name: Download Attack Flow Builder
      uses: actions/download-artifact@v4
      with:
        name: attack-flow-builder
        path: docs/extra/ui
    - name: Make Attack Flow schema
      run: poetry run make docs-schema
    # These steps were broken in the AF-219 refactor. There's a new ticket AF-222 to
    # track fixing the cli.ts script and re-enabling these steps.
    # - name: Validate Corpus
    #   run: poetry run make validate
    # - name: Copy corpus into docs
    #   run: poetry run make docs-examples
    - name: Copy matrix-viz code into docs
      run: poetry run make docs-matrix
    - name: Build HTML docs
      run: poetry run make docs
    - name: Upload HTML docs
      uses: actions/upload-artifact@v4
      with:
        name: attack-flow-docs-html
        path: docs/_build/dirhtml/


  deploy_prod:
    # This job only runs when creating a tag.
    if: startsWith(github.ref, 'refs/tags/v')
    needs: render_site
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Download HTML docs
      uses: actions/download-artifact@v4
      with:
        name: attack-flow-docs-html
        path: docs
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  docker:
    # This job only runs when creating a tag.
    if: startsWith(github.ref, 'refs/tags/v')
    needs: ["test_python", "attack_flow_builder"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Docker metadata
        id: af_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          labels: org.opencontainers.image.url=https://ctid.mitre.org/our-work/attack-flow/
      - name: Build Attack Flow Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.af_meta.outputs.tags }}
          labels: ${{ steps.af_meta.outputs.labels }}

  deploy_preview:
    if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
    needs: render_site
    runs-on: ubuntu-latest
    env:
      AZURE_STORAGE_ACCOUNT: ctidflow
      AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_SAS_TOKEN }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      STATICRYPT_PASS: ${{ secrets.STATICRYPT_PASS }}
      NODE_OPTIONS: --max-old-space-size=8192
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm install -g staticrypt
      - name: Download HTML
        uses: actions/download-artifact@v4
        with:
          name: attack-flow-docs-html
          path: docs
      - run: >
          staticrypt --remember 30 --salt 64c02ee360e9a7eb90b1c28e89be65ac \
            --password $STATICRYPT_PASS --short \
            --template-title "CTID Attack Flow Preview (branch: $BRANCH_NAME)" \
            --template-instructions "The contents of this site are marked TLP:AMBER. Do not share with unauthorized individuals." \
            --template-color-primary "#6241c5" \
            --template-color-secondary "#b2b2b2" \
            --template-button "Log In" \
            -r docs/
      - name: Ensure StatiCrypt ran # StatiCrypt will fail without warning; verify it created a directory
        run: test -d encrypted
      - name: Copy encrypted HTML files
        run: rsync -Ir -v --include='*.html' --exclude='*.*' encrypted/docs .
      - name: Set the branch name
        run: mv docs "$BRANCH_NAME"
      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - name: Delete old blobs
        run: az storage blob delete-batch -s '$web' --pattern "$BRANCH_NAME/*"
      - name: Upload to blob storage
        run: az storage blob upload-batch -s . --pattern "$BRANCH_NAME/*" -d '$web'
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
            script: |
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `This PR has been published to https://${process.env['AZURE_STORAGE_ACCOUNT']}.z13.web.core.windows.net/${process.env['BRANCH_NAME']}/`,
              })
