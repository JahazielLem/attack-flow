import type { BaseStixDomainObject } from "../StixDomainObjectBase";

/**
 * STIX 2.1 Malware Analysis.
 */
export interface MalwareAnalysis extends BaseStixDomainObject<"malware-analysis"> {

    /**
     * The name of the analysis engine or product that was used. Product names
     * SHOULD be all lowercase with words separated by a dash "-".
     * 
     * For cases where the name of a product cannot be specified, a value of
     * "anonymized" MUST be used.
     */
    product: string;

    /**
     * The version of the analysis product that was used to perform the
     * analysis.
     */
    version?: string;

    /**
     * A description of the virtual machine environment used to host the guest
     * operating system (if applicable) that was used for the dynamic analysis
     * of the malware instance or family.
     * 
     * If this value is not included in conjunction with the
     * operating_system_ref property, this means that the dynamic analysis may
     * have been performed on bare metal (i.e. without virtualization) or the
     * information was redacted.
     * 
     * The value of this property MUST be the identifier for a SCO software
     * object.
     */
    host_vm_ref?: string;

    /**
     * The operating system used for the dynamic analysis of the malware
     * instance or family. This applies to virtualized operating systems as well
     * as those running on bare metal.
     * 
     * The value of this property MUST be the identifier for a SCO software
     * object.
     */
    operating_system_ref?: string;

    /**
     * Any non-standard software installed on the operating system (specified
     * through the operating-system value) used for the dynamic analysis of the
     * malware instance or family.
     * 
     * The value of this property MUST be the identifier for a SCO software
     * object.
     */
    installed_software_refs?: string[];

    /**
     * The named configuration of additional product configuration parameters
     * for this analysis run.
     * 
     * For example, when a product is configured to do full depth analysis of
     * Windowâ„¢ PE files. This configuration may have a named version and that
     * named version can be captured in this property. This will ensure
     * additional runs can be configured in the same way.
     */
    configuration_version?: string;

    /**
     * The specific analysis modules that were used and configured in the
     * product during this analysis run.
     * 
     * For example, configuring a product to support analysis of Dridex.
     */
    modules?: string[];

    /**
     * The version of the analysis engine or product (including AV engines) that
     * was used to perform the analysis.
     */
    analysis_engine_version?: string;
    
    /**
     * The version of the analysis definitions used by the analysis tool
     * (including AV tools).
     */
    analysis_definition_version?: string;

    /**
     * The date and time that the malware was first submitted for scanning or
     * analysis. This value will stay constant while the scanned date can
     * change. For example, when Malware was submitted to a virus analysis tool.
     */
    submitted?: string;

    /**
     * The date and time that the malware analysis was initiated.
     */
    analysis_started?: string;

    /**
     * The date and time that the malware analysis ended.
     */
    analysis_ended?: string;

    /**
     * The classification result or name assigned to the malware instance by the
     * scanner tool.
     */
    result_name?: string;

    /**
     * The classification result as determined by the scanner or tool analysis
     * process.
     * 
     * The value for this property SHOULD come from the malware-result-ov open
     * vocabulary.
     */
    result?: string;

    /**
     * This property contains the references to the STIX Cyber-observable
     * Objects that were captured during the analysis process.
     */
    analysis_sco_refs?: string[];

    /**
     * This property contains the reference to the SCO file, network traffic or
     * artifact object that this malware analysis was performed against.
     * 
     * Caution should be observed when creating an SRO between Malware and
     * Malware Analysis objects when the Malware sample_refs property does not
     * contain the SCO that is included in the Malware Analysis sample_ref
     * property.
     * 
     * Note, this property can also contain a reference to an SCO which is not
     * associated with Malware (i.e., some SCO which was scanned and found to be
     * benign.)
     */
    sample_ref?: string;

}
